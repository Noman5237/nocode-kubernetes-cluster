apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  name: ingress-nginx
---
apiVersion: v1
kind: Secret
metadata:
  name: ingress-tls
  namespace: ingress-nginx
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ4VENDQXRtZ0F3SUJBZ0lVWTNGTXBPVnh3OHN1a1dGOUFUNGtMcitsdjhjd0RRWUpLb1pJaHZjTkFRRUwKQlFBd2FERUxNQWtHQTFVRUJoTUNWVk14RHpBTkJnTlZCQWdUQms5eVpXZHZiakVSTUE4R0ExVUVCeE1JVUc5eQpkR3hoYm1ReEV6QVJCZ05WQkFvVENrdDFZbVZ5Ym1WMFpYTXhDekFKQmdOVkJBc1RBa05CTVJNd0VRWURWUVFECkV3cExkV0psY201bGRHVnpNQjRYRFRJek1EZ3hOekV3TURVd01Gb1hEVEkwTURneE5qRXdNRFV3TUZvd2ZERUwKTUFrR0ExVUVCaE1DVlZNeER6QU5CZ05WQkFnVEJrOXlaV2R2YmpFUk1BOEdBMVVFQnhNSVVHOXlkR3hoYm1ReApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1TQXdIZ1lEVlFRTEV4ZExkV0psY201bGRHVnpJRlJvClpTQklZWEprSUZkaGVURU9NQXdHQTFVRUF4TUZZV1J0YVc0d2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFDc0hacklUWHhJTU03WkhhNDkrekZXbmxsMFc4VnFnY3hmWVQ5TGhiUjRRL21kN2JhWApVK0FPc3IzR3B2Z1AraE82N1JFbnlNMnBFSk1yYlN3c0dLUWpUTW1yQWRiTjdrUldOUC9wUHZHVlYzNC9iYUlsCng1U1V2RWVwY1VGVjVoU242aThycTVtSzRWaHNDM0d3ejNkcUZnRmlFVG1HaThmQTIrQnNZZmJJTitQVG1rRUUKTEREQUlYb2k0ZWY0WmZ5VWd5eHRPUDdKQVMydUY0SE83U1hpOXYxTjhOTXhLQi9DbkVZdW8wdHo0SVFDbTlNcwo5T0NFOGp0VnJBSHg1bDA4c3E5cFVaWnU1dzBYSkNWL0xiM0NXRmVvYjl2bmhwbGtMekl2TmpPbndPR29DVGJFCjNaQ3BheG9Tc0JyQ242Q2hpWE44ZU0zaTJhL2RuQWNPWTNOdkFnTUJBQUdqZnpCOU1BNEdBMVVkRHdFQi93UUUKQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJdwpBREFkQmdOVkhRNEVGZ1FVZkxoSmdMU0lpeWtPMWxPcnI4Sk14K2MxeW5jd0h3WURWUjBqQkJnd0ZvQVVra3A1CnJPRis5cllYRUQ1L0VJcGsyRlp4UTU0d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFLMGd5R2ltSEZ1RHNNYkoKQlFoTkJYUmNjMjlmQWlqRDA5dGVvZGR1dzU2ckwwMFdCTWlIOHFHLzJ0VDFOMWs5eXdKTG5EcWNyVExzL0kvUApQNnMzc1JQOCtGUG5aN21jU2lwY1diREgvVlgyWmgwVVRMYVVhUm1MZkthVVB2QWpVb2RZd3hGMkRoWmxHcE1hCnFGWURQSFF6NURCYWZld0UrMk13NWs3VjVBUUVYQXBZRmc0OXpWQXNQU0tXOHpaOFJrQXh4dXJyZUJBMjlzc1cKc3l5TnVSaWU2ejFhRk1ZLy9RQWtPTTljaGZjWHJIbkZVajM1M1pHeU9EOS9sRE1ndVR1T3BUamVOWFhMR0swagpDQUFxNnVuZVdKTjhUSVlHWWplNy90VG5ySDA2TUVuZmdFRGw4ZldsWFE0cHBoZVVaUWkwNG1DUkxwVERNNGp1CkZTRlpIR0k9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBckIyYXlFMThTRERPMlIydVBmc3hWcDVaZEZ2RmFvSE1YMkUvUzRXMGVFUDVuZTIyCmwxUGdEcks5eHFiNEQvb1R1dTBSSjhqTnFSQ1RLMjBzTEJpa0kwekpxd0hXemU1RVZqVC82VDd4bFZkK1AyMmkKSmNlVWxMeEhxWEZCVmVZVXArb3ZLNnVaaXVGWWJBdHhzTTkzYWhZQlloRTVob3ZId052Z2JHSDJ5RGZqMDVwQgpCQ3d3d0NGNkl1SG4rR1g4bElNc2JUait5UUV0cmhlQnp1MGw0dmI5VGZEVE1TZ2Z3cHhHTHFOTGMrQ0VBcHZUCkxQVGdoUEk3VmF3QjhlWmRQTEt2YVZHV2J1Y05GeVFsZnkyOXdsaFhxRy9iNTRhWlpDOHlMell6cDhEaHFBazIKeE4yUXFXc2FFckFhd3ArZ29ZbHpmSGpONHRtdjNad0hEbU56YndJREFRQUJBb0lCQUZZcXRCVFhoZ0wyUEhoQgovYnVXQ0V0ZkYxWERwQUFBWDNyWXlzRmFmTkZBNXJVRUQwZVBmRHFmalpib2ZJUXpKTEdPZ2VvekE1TkNjd3RvCnFwYWc5M3VjczlIako5RU5HalUyYjNBc1RQSUJUWGtmdisrK0RVcXhRQWM2WmdWRkhNNDcxY1c5TVM5d1JiNUIKdEhkYVJtUmNBL0Urd2xmem50dVV1TFJLRHl5SXpDclJCS3Q5Zlh3SFpWaFROSUtsekpRY255M3NaVDJ6ek9DYgp3TUpGMjhGZWx3RDdOSDdrUFlBZ01HNzZUOWZpM1BqcVM1aTFOVzFlK0xZLzBqdjFPU0ZTZmlhMXJzTWtBUW1iCmprUXhzSk1Mb2dkNGRYMGJndENZUysydDlMVGUzaW1iWGF5TmRUdnJudmdlNTdpRnJwWGhyeEladm40bFVNeFMKSkk5eUM0RUNnWUVBeU45WGhtL1lrU09mTHQ1UkJNLzJjZjVaKzh2eGRWNjc0S3JTL3l2aDFzMTROTjBueXcvLwpheWdlZ3dVQVBPUkVQQ3RIZDZOWElST3lkS09aV3E2cjJET01DY3FBVitzcko4ZHNNMWRTVDM4ZklIQUtJY0puCngwc0Q2UEdDQnE2SVFuL3NlbDJLd0R2bWhQSmxNVCs3d3FJNDZCQjZ2VFJGQ2ZleWRUSzZqYUVDZ1lFQTIxbm4KQWJQNDYyeVlRVkJqNkQ4UGY2WHRuWmh2U2dyZWhaUGp5Nk1LRTI2YzJkUHdGRnp6blQxczY1SUxUcllxTjQwZQpMRXNjcFlpWFVjMzhiWmFZUUJxdHBtQXFJbWRQc0hYV1FIYXBxUTUySFJiRHlWeitmTnpzMUsvKzU2NU9EZzdGCi9rM2M1NHN0SkFucWdYWXRPN1Z3UHgxMk5CTXdCUWRzc1JJOXh3OENnWUFtTTlQQmphUHlkb1BmdGdoU2tmcWMKMDNMcG9HL2JrcGpJc2JSUE0xbFFNT09icWpQWE9zT283WWhnQXFONDhUREpBTEltM3JuRFlLdWY0ejFYTWNFYwo3VERFNis1Y3lpejY4OEp3UVRzMlEwYjRORmE0OVBBbnh1eUhjT2I1dmxmTHplaDduUzYyUUs0bXVyTGtHdXJxCnFVK0pVeGtFd3R3ZWVTMUhmTTVlQVFLQmdRQ3ByYm5NejNOV2FnSzlRM3FGUllLdnM2TkRyWThwTDQ5Q3RVd1oKVWwyUStwZkt5TytHVVFFQ09XbndNR0VlMmp0K0RXT3h6OGl4SkNBcDM3WE04Qm1HUFJ6bS9xeVpRR0djbHdyTgpndjFyRVF5OUk4Y0FGVGVuVHg3RXgvL2ZLQzZwSVRSM3E3T2VTVUw2QmRHcG84a0p6eWl0S2hVdDQwbmFHZ3d5ClRYSU1jUUtCZ1FERjNSbjl2VFJpenpNdWJzTEZ6VnVZU2ZXNDNUdGJKY0h3bmJmUUxJdTFYcHgyWEk1YlZ0OVoKM2hiK3RwRi9wY3hVWlV3RTA2eXQ1STl0bWtpSVYzaVo2NEZCVkFwOTZvRmRCNkpwQURIT3FIQlg5TUZ4TDdaeQpUTlo2SjJITUp5TWlWdFVOS0xyRWkySVBEQ1VETWJ2Zmd5U1NJbnhvYk5nWHI3c3pFRG5KWGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
type: kubernetes.io/tls
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.3
  name: ingress-nginx
  namespace: ingress-nginx
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.3
  name: ingress-nginx-admission
  namespace: ingress-nginx
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.3
  name: ingress-nginx
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resourceNames:
  - ingress-controller-leader
  resources:
  - configmaps
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.3
  name: ingress-nginx-admission
  namespace: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.3
  name: ingress-nginx
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - secrets
  - namespaces
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.3
  name: ingress-nginx-admission
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.3
  name: ingress-nginx
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.3
  name: ingress-nginx-admission
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.3
  name: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx
subjects:
- kind: ServiceAccount
  name: ingress-nginx
  namespace: ingress-nginx
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.3
  name: ingress-nginx-admission
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx-admission
subjects:
- kind: ServiceAccount
  name: ingress-nginx-admission
  namespace: ingress-nginx
---
apiVersion: v1
data:
  allow-snippet-annotations: "true"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.3
  name: ingress-nginx-controller
  namespace: ingress-nginx
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.3
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  ports:
  - appProtocol: http
    name: http
    port: 80
    protocol: TCP
    targetPort: http
  - appProtocol: https
    name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.3
  name: ingress-nginx-controller-admission
  namespace: ingress-nginx
spec:
  ports:
  - appProtocol: https
    name: https-webhook
    port: 443
    targetPort: webhook
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.3
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  minReadySeconds: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --election-id=ingress-controller-leader
        - --controller-class=k8s.io/ingress-nginx
        - --ingress-class=nginx
        - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller
        - --validating-webhook=:8443
        - --validating-webhook-certificate=/usr/local/certificates/cert
        - --validating-webhook-key=/usr/local/certificates/key
        - --default-ssl-certificate=$(POD_NAMESPACE)/ingress-tls
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LD_PRELOAD
          value: /usr/local/lib/libmimalloc.so
        image: k8s.gcr.io/ingress-nginx/controller:v1.1.3@sha256:31f47c1e202b39fadecf822a9b76370bd4baed199a005b3e7d4d1455f4fd3fe2
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /wait-shutdown
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: controller
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 8443
          name: webhook
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          runAsUser: 101
        volumeMounts:
        - mountPath: /usr/local/certificates/
          name: webhook-cert
          readOnly: true
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: ingress-nginx
      terminationGracePeriodSeconds: 300
      volumes:
      - name: webhook-cert
        secret:
          secretName: ingress-nginx-admission
---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.3
  name: ingress-nginx-admission-create
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.1.3
      name: ingress-nginx-admission-create
    spec:
      containers:
      - args:
        - create
        - --host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$(POD_NAMESPACE).svc
        - --namespace=$(POD_NAMESPACE)
        - --secret-name=ingress-nginx-admission
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1.1@sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660
        imagePullPolicy: IfNotPresent
        name: create
        securityContext:
          allowPrivilegeEscalation: false
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
      serviceAccountName: ingress-nginx-admission
---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.3
  name: ingress-nginx-admission-patch
  namespace: ingress-nginx
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/version: 1.1.3
      name: ingress-nginx-admission-patch
    spec:
      containers:
      - args:
        - patch
        - --webhook-name=ingress-nginx-admission
        - --namespace=$(POD_NAMESPACE)
        - --patch-mutating=false
        - --secret-name=ingress-nginx-admission
        - --patch-failure-policy=Fail
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1.1@sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660
        imagePullPolicy: IfNotPresent
        name: patch
        securityContext:
          allowPrivilegeEscalation: false
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
      serviceAccountName: ingress-nginx-admission
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.3
  name: nginx
spec:
  controller: k8s.io/ingress-nginx
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.1.3
  name: ingress-nginx-admission
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: ingress-nginx-controller-admission
      namespace: ingress-nginx
      path: /networking/v1/ingresses
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validate.nginx.ingress.kubernetes.io
  rules:
  - apiGroups:
    - networking.k8s.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  sideEffects: None